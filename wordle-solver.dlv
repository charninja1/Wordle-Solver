{in_word(W) : valid(W,_,_,_,_,_)} = 1.

% %all unique starting words
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L1 =L2.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L1 =L3.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L1 =L4.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L1 =L5.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L2 =L3.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L2 =L4.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L2 =L5.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L3 =L4.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L3 =L5.
% :- in_word(W), valid(W, L1, L2, L3, L4, L5), L4 =L5.

%score of each word
score(W,S) :- in_word(W), valid(W, L1, L2, L3, L4, L5), frequency1(L1, F1), 
    frequency2(L2, F2), frequency3(L3, F3), frequency4(L4, F4), frequency5(L5, F5), S = F1 + F2 + F3 + F4 + F5.


%max score
:~ score(W,S). [-S@1, W]

% %counts vowels per word
% vowel_count(W,C) :- #count{L1 : valid(W, L1, L2, L3, L4, L5), vowel(L1)} = C1,
%                     #count{L2 : valid(W, L1, L2, L3, L4, L5), vowel(L2)} = C2,
%                     #count{L3 : valid(W, L1, L2, L3, L4, L5), vowel(L3)} = C3,
%                     #count{L4 : valid(W, L1, L2, L3, L4, L5), vowel(L4)} = C4,
%                     #count{L5 : valid(W, L1, L2, L3, L4, L5), vowel(L5)} = C5,
%                     C= C1 + C2 + C3 + C4 + C5, in_word(W).

:- in_at(L1,1), in_word(W), valid(W,L,_,_,_,_), L != L1.
:- in_at(L2,2), in_word(W), valid(W,_,L,_,_,_), L != L2.
:- in_at(L3,3), in_word(W), valid(W,_,_,L,_,_), L != L3.
:- in_at(L4,4), in_word(W), valid(W,_,_,_,L,_), L != L4.
:- in_at(L5,5), in_word(W), valid(W,_,_,_,_,L), L != L5.

in(L) :- in_at(L, _).
:- out_at(L1,1), in_word(W), valid(W,L,_,_,_,_), L = L1.
:- out_at(L2,2), in_word(W), valid(W,_,L,_,_,_), L = L2.
:- out_at(L3,3), in_word(W), valid(W,_,_,L,_,_), L = L3.
:- out_at(L4,4), in_word(W), valid(W,_,_,_,L,_), L = L4.
:- out_at(L5,5), in_word(W), valid(W,_,_,_,_,L), L = L5.


in_letter(W,L):- valid(W,L,_,_,_,_), in(L).
in_letter(W,L):- valid(W,_,L,_,_,_), in(L).
in_letter(W,L):- valid(W,_,_,L,_,_), in(L).
in_letter(W,L):- valid(W,_,_,_,L,_), in(L).
in_letter(W,L):- valid(W,_,_,_,_,L), in(L).

:- in(L), not in_letter(W,L), in_word(W).

%prefers high vowels
% :~vowel_count(W,C). [-C@2, W]                    

% #show vowel_count/2.
% #show score/2.
#show score/2.